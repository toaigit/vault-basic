#!/bin/bash
#  To encrypt the password before saving to the vault and decrypt it after retrieve
#  the encrypted password from the vault.

if [ $# -lt 2 ] ; then
   echo "Usage: $0 action path [password]"
   echo "  action can be put or get"
   echo "  path is your secret path"
   exit 1
fi

. ./vault.env

#  you should get the salt key from somewhere and not hardcode it here
SALT_KEY=H3lloW0rld3

OPENSSL_FLAG="aes-256-cbc -md sha256 -pbkdf2 -salt -k $SALT_KEY"

ACTION=$1
KPATH=$2

if [ "x$ACTION" == "xput" ] ; then
	if [ $# -ne 3 ] ; then
	   echo "put require password value."
	   exit 1
	fi
fi

password=$3

store_secret() {

   KPATH=$1
   password=$2
   OPENSSL_FLAG="${@:3}"
   encryptedpasswd=`echo $password | openssl $OPENSSL_FLAG -a -e`
   vault kv put $KPATH password=$encryptedpasswd
   
   }

decrypt_secret() {

  KPATH=$1
  OPENSSL_FLAG="${@:2}"
  passwd=`vault kv get -field=password $KPATH`
  realpasswd=`echo $passwd | openssl $OPENSSL_FLAG -a -d`
  echo "password: $realpasswd"

  }

case $ACTION in 
	put)
	   store_secret $KPATH $password $OPENSSL_FLAG
	   ;;
	get)
	   decrypt_secret $KPATH $OPENSSL_FLAG
	   ;;
	*)
	   echo "Usage: $0 action path [password]"
	   ;;
esac

